{"version":3,"sources":["components/Statistics/StatisticsElement/StatisticsElement.module.css","shared/components/FeedbackBtn/FeedbackBtn.module.css","components/Notification/Notification.module.css","shared/components/FeedbackBtn/FeedbackBtn.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","components/Statistics/StatisticsElement/StatisticsElement.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","FeedbackBtn","name","onIncrement","className","s","type","onClick","FeedbackOptions","options","map","btn","Notification","message","Section","title","children","StatisticsElement","value","wrapper","Statistics","elements","Object","entries","item","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","event","target","prevState","total","positivePercentage","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,gCAAgC,MAAQ,iCAAiC,QAAU,qC,mBCA5GD,EAAOC,QAAU,CAAC,IAAM,yBAAyB,KAAO,iDAAiD,QAAU,oDAAoD,IAAM,kD,gBCA7KD,EAAOC,QAAU,CAAC,QAAU,gC,6HCabC,EAXK,SAAC,GAAD,QAAGC,YAAH,MAAU,GAAV,EAAcC,EAAd,EAAcA,YAAd,OAClB,wBAAQC,UAAWC,IAAEH,GAAOI,KAAK,SAASJ,KAAMA,EAAMK,QAASJ,EAA/D,SACGD,KCaUM,EAfS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASN,EAAkB,EAAlBA,YAClC,OACE,8BACGM,EAAQC,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,CAAuBT,KAAMS,EAAKR,YAAaA,GAA7BQ,S,gBCIXC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,qBAAKT,UAAWC,IAAEQ,QAAlB,SAA4BA,KCYtBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,gBCgBQC,EAnBW,SAAC,GAAqB,IAAnBf,EAAkB,EAAlBA,KAAMgB,EAAY,EAAZA,MACjC,OACE,sBAAKd,UAAWC,IAAEc,QAAlB,UACE,uBAAMf,UAAWC,IAAEH,KAAnB,UACY,uBAATA,EAAgC,oBAAsBA,EADzD,WAGA,uBAAME,UAAWC,IAAEa,MAAnB,UACGA,EACS,uBAAThB,GAAiC,WCE3BkB,EAXI,SAAAC,GACjB,OACE,mCACGC,OAAOC,QAAQF,GAAUX,KAAI,SAAAc,GAC5B,OACE,cAAC,EAAD,CAAiCtB,KAAMsB,EAAK,GAAIN,MAAOM,EAAK,IAApCA,EAAK,UCyDxBC,G,MAzDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAmBMC,EAAqB,WACzB,OAAON,EAAOE,EAAUE,GAS1B,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CAASW,MAAM,wBAAf,SACE,cAAC,EAAD,CACEN,QAAS,CAAC,OAAQ,UAAW,OAC7BN,YAhCY,SAAA+B,GAClB,OAAQA,EAAMC,OAAOjC,MACnB,IAAK,OACH0B,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHN,GAAW,SAAAM,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHJ,GAAO,SAAAI,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAsBF,cAAC,EAAD,CAASrB,MAAM,aAAf,SAC4B,IAAzBkB,IACC,cAAC,EAAD,CAAcpB,QAAQ,sBAEtB,cAAC,EAAD,CACEc,KAAMA,EACNE,QAASA,EACTE,IAAKA,EACLM,MAAOJ,IACPK,mBAtBwB,IAAzBL,IACH,EACAM,KAAKC,MAAc,IAAPb,EAAcM,cChClCQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f27a5a10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"StatisticsElement_name__1gsjb\",\"value\":\"StatisticsElement_value__3zRh1\",\"wrapper\":\"StatisticsElement_wrapper__1hIzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackBtn_btn__1lldo\",\"good\":\"FeedbackBtn_good__3Af83 FeedbackBtn_btn__1lldo\",\"neutral\":\"FeedbackBtn_neutral__2LMTN FeedbackBtn_btn__1lldo\",\"bad\":\"FeedbackBtn_bad__39U0P FeedbackBtn_btn__1lldo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2ntoX\"};","import PropTypes from 'prop-types';\nimport s from './FeedbackBtn.module.css';\n\nconst FeedbackBtn = ({ name = '', onIncrement }) => (\n  <button className={s[name]} type=\"button\" name={name} onClick={onIncrement}>\n    {name}\n  </button>\n);\n\nFeedbackBtn.propTypes = {\n  name: PropTypes.string.isRequired,\n  onIncrement: PropTypes.func.isRequired,\n};\n\nexport default FeedbackBtn;\n","import FeedbackBtn from '../../shared/components/FeedbackBtn';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onIncrement }) => {\r\n  return (\r\n    <div>\r\n      {options.map(btn => (\r\n        <FeedbackBtn key={btn} name={btn} onIncrement={onIncrement} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onIncrement: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <div className={s.message}>{message}</div>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h1>{title}</h1>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './StatisticsElement.module.css';\n\nconst StatisticsElement = ({ name, value }) => {\n  return (\n    <div className={s.wrapper}>\n      <span className={s.name}>\n        {name === 'positivePercentage' ? 'positive feedback' : name}:&nbsp;\n      </span>\n      <span className={s.value}>\n        {value}\n        {name === 'positivePercentage' && '%'}\n      </span>\n    </div>\n  );\n};\n\nStatisticsElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default StatisticsElement;\n","import StatisticsElement from './StatisticsElement';\n\nconst Statistics = elements => {\n  return (\n    <>\n      {Object.entries(elements).map(item => {\n        return (\n          <StatisticsElement key={item[0]} name={item[0]} value={item[1]} />\n        );\n      })}\n    </>\n  );\n};\nexport default Statistics;\n","import FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport './App.css';\nimport { useState } from 'react';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = event => {\n    switch (event.target.name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = function () {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = function () {\n    return countTotalFeedback() === 0\n      ? 0\n      : Math.floor((good * 100) / countTotalFeedback());\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onIncrement={handleClick}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}